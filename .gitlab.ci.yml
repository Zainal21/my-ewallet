stages:
  - build

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  tags:
    - deploy
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        if [ -n "$CI_COMMIT_TAG" ]; then
          tag=":$CI_COMMIT_TAG"
        else
          tag=":$CI_COMMIT_REF_SLUG"
        fi

        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull --build-arg --no-cache -t "$CI_REGISTRY_IMAGE${tag}" -f .build/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
    - echo "DOCKER_IMAGE_NAME_AND_TAG=$CI_REGISTRY_IMAGE${tag}" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - .build/Dockerfile
    - if: $CI_COMMIT_TAG
      exists:
        - .build/Dockerfile
    - if: $CI_MANUAL_RUN_PIPELINE
      exists:
        - .build/Dockerfile
